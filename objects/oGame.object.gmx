<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state = 0; //0=none, 1 = placeing second point
global.playing = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="57">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state=0;  

instance_destroy(last)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="6" enumb="56">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>//if (global.ready == true) exit

if (global.state == 0) {
    last = instance_create(mouse_x, mouse_y, oWall);
    with (last) {
        stretch=true;
   }
    global.state = 1;
}
else if (global.state == 1 ) {
    with (last) {
        stretch=false;

        //turn it into a physics fixture
        fix = physics_fixture_create()
        physics_fixture_set_polygon_shape(fix)
            
        physics_fixture_add_point(fix,image_xscale*32,-32*image_yscale/2)//righttop
        physics_fixture_add_point(fix,image_xscale*32,32*image_yscale/2)//rightbottom
        physics_fixture_add_point(fix,0,32*image_yscale/2)//leftbottom
        physics_fixture_add_point(fix,0,-32*image_yscale/2)//lefttop
        
        
        physics_fixture_set_density(fix,0)
        physics_fixture_set_restitution(fix,0.1)
        physics_fixture_set_collision_group(fix,0)
        physics_fixture_set_linear_damping(fix,0.5)
        physics_fixture_set_angular_damping(fix,0.1)
        physics_fixture_set_friction(fix,3)
        physics_fixture_bind(fix,self)
        physics_fixture_delete(fix) 
    }
    
    //start placing next segment
    last = instance_create(mouse_x, mouse_y, oWall);
    with (last) {stretch=true;}
}
//place player
else if (global.state == 2 ) { 
    instance_create(mouse_x, mouse_y, oPlayPlacer);
}
//move goal
else if (global.state == 3 ) { 
    with(oGoal) {
        phy_position_x=mouse_x; 
        phy_position_y=mouse_y; 
    }
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="87">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state= 0
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="86">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (view_visible[1] == true) {
    view_visible[0] = true;
    view_visible[1] = false;
    window_set_size(1600,1000);
    surface_resize(application_surface, room_width, room_height);
}
else {
    view_visible[0] = false;
    view_visible[1] = true;
    window_set_size(512,512);
    surface_resize(application_surface, 512, 512);
}


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="84">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
if (global.playing == false) {
    global.playing = true;
    
    //spawn players / hide playerplacers
    with(oPlayPlacer){
        instance_create(x,y,oPlayer);
        visible = false;
    }
    
    //show goal
    with (oGoal) visible = true;
} else {
    global.playing = false;
    with(oPlayer) instance_destroy(self);
    with(oPlayPlacer) visible = true;
    
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="80">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state=2
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
//get data
savedata = get_string("Paste your level save data below","");
//exit if blank
if (savedata == "") exit;

//split into sections
savesections = split(savedata,"|")
walls = savesections[0];
players = savesections[1];
goal = savesections[2];

print("walls"+walls)
print("p"+players)
print("goal"+goal)

//delete old data

with(oWall) instance_destroy(self);
with(oPlayPlacer) instance_destroy(self);

//generate new walls
walls = split(walls,";")
for (var i=0;i&lt;array_length_1d(walls);i++) {
    print("wall"+string(i))
    wallData = split(walls[i],",")
    
    //create new wall
    newWall = instance_create(real(wallData[0]), real(wallData[1]), oWall);
    with (newWall) {
        image_xscale = other.wallData[2];
        phy_rotation = other.wallData[3];
        
        //turn it into a physics fixture
        fix = physics_fixture_create()
        physics_fixture_set_polygon_shape(fix)
            
        physics_fixture_add_point(fix,image_xscale*32,-32*image_yscale/2)//righttop
        physics_fixture_add_point(fix,image_xscale*32,32*image_yscale/2)//rightbottom
        physics_fixture_add_point(fix,0,32*image_yscale/2)//leftbottom
        physics_fixture_add_point(fix,0,-32*image_yscale/2)//lefttop
        
        
        physics_fixture_set_density(fix,0)
        physics_fixture_set_restitution(fix,0.1)
        physics_fixture_set_collision_group(fix,0)
        physics_fixture_set_linear_damping(fix,0.5)
        physics_fixture_set_angular_damping(fix,0.1)
        physics_fixture_set_friction(fix,3)
        physics_fixture_bind(fix,self)
        physics_fixture_delete(fix) 
    }
}

//generate new players
players = split(players,";")
for (var i=0;i&lt;array_length_1d(players);i++) {
    print("player"+string(i))
    playerData = split(players[i],",")
    
    //create new wall
    newPlayer = instance_create(real(playerData[0]), real(playerData[1]), oPlayPlacer);
}

//move goal
goalPos = split(goal,",");
with(oGoal) {
    phy_position_x=real(other.goalPos[0]); 
    phy_position_y=real(other.goalPos[1]); 
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="71">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state = 3
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="69">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>
global.export = "";

//add walls
with(oWall) global.export += string(x) + "," + string(y) + "," + string(image_xscale) + "," + string(phy_rotation) + ";";
global.export += '|';

//add players
with(oPlayPlacer) global.export += string(self.x) + "," + string(self.y) + ";";
global.export += '|';

//add goal location
with(oGoal) global.export += string(self.x) + "," + string(self.y);

//export string
get_string("Copy the text below to save your level",global.export);


//save screenshot
var file = get_save_filename("*.png", "screenshot");
if (file != "") screen_save(file);


</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="10" enumb="68">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.state = 4
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
